version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: nexpharma-postgres
    environment:
      POSTGRES_DB: nex_pharma
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nexpharma-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: nexpharma-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - nexpharma-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # FastAPI Application
  app:
    build:
      context: .
      dockerfile: Dockerfile.local
    container_name: nexpharma-app
    environment:
      ENV: local
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: nex_pharma
      DB_USER: postgres
      DB_PASSWORD: postgres
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_SECURE: false
      STORAGE_BUCKET: nexpharma-storage
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    networks:
      - nexpharma-network
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    restart: unless-stopped
    command: python scripts/run.py --env local --host 0.0.0.0 --port 8000 --reload

volumes:
  postgres_data:
    driver: local
  minio_data:
    driver: local

networks:
  nexpharma-network:
    driver: bridge 